#BLAS/LAPACK
FIND_PACKAGE(BLAS QUIET)
FIND_PACKAGE(LAPACK QUIET)
IF(BLAS_FOUND AND LAPACK_FOUND)
  MESSAGE(STATUS "Found BLAS/LAPACK @ ${BLAS_LIBRARIES};${LAPACK_LIBRARIES}")
  LIST(APPEND ALL_LIBRARIES ${BLAS_LIBRARIES} ${LAPACK_LIBRARIES})
ELSE(BLAS_FOUND AND LAPACK_FOUND)
  MESSAGE(SEND_ERROR "Cannot find BLAS/LAPACK!")
ENDIF(BLAS_FOUND AND LAPACK_FOUND)

#qpOASES
SET(qpOASES_ROOT "ThirdParty/qpOASES-master")
ADD_DEFINITIONS(-D__NO_COPYRIGHT__)
ADD_DEFINITIONS(-D__SUPPRESSANYOUTPUT__)
#ADD_DEFINITIONS(-DSOLVER_MA27 -DSOLVER_MA57)
FILE(GLOB_RECURSE headerqpOASES "${PROJECT_SOURCE_DIR}/${qpOASES_ROOT}/include/*.h" "${PROJECT_SOURCE_DIR}/${qpOASES_ROOT}/include/*.hpp" "${PROJECT_SOURCE_DIR}/${qpOASES_ROOT}/include/*.hh")
FILE(GLOB_RECURSE sourceqpOASES "${PROJECT_SOURCE_DIR}/${qpOASES_ROOT}/src/*.cpp" "${PROJECT_SOURCE_DIR}/${qpOASES_ROOT}/src/*.cc" "${PROJECT_SOURCE_DIR}/${qpOASES_ROOT}/src/*.c")
INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/${qpOASES_ROOT}/include")
FIND_PACKAGE(OpenBLAS QUIET)
IF(BLAS_FOUND AND LAPACK_FOUND)
  LIST(REMOVE_ITEM sourceqpOASES "${PROJECT_SOURCE_DIR}/${qpOASES_ROOT}/src/BLASReplacement.cpp" "${PROJECT_SOURCE_DIR}/${qpOASES_ROOT}/src/LAPACKReplacement.cpp")
ELSE(BLAS_FOUND AND LAPACK_FOUND)
  MESSAGE(WARNING "Cannot find BLAS/LAPACK, using replacement!")
ENDIF(BLAS_FOUND AND LAPACK_FOUND)
